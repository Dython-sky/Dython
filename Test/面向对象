面向对象的定义：找出解决事情的人，然后分配职责，不关乎一件事解决的过程与具体的细节，与之对立就是面向过程
类与对象
	类：
		定义：万物抽象概念的类别
	对象：
		定义：具体一个实体，万物皆对象
	面向对象的三大特征：
		1.封装（分）
			从数据角度上讲
			1）定义：将一些基本类型复合成自定义的数据类型
			2）优势：将数据与对数据操作相关联
				代码可读性高
			从行为角度上讲
			1）定义：类外提供必要的功能，隐藏实现的细节
			2）优势：简化编程，使用者不必了解具体的实现细节，只需要调用对外的功能
			从行为角度上讲
			1）1.分而治之（将一个大的类分解为许多小的类，每个类处理独立的功能）
			   2.变则疏之（变化的地方独立封装，避免影响其他的类）
			   3.高内聚（类中各个方法都在完成一个任务）
			   4.低耦合（类与类之间的关联性和依赖度要低，让一个类的改变，尽少影响其他的类）

		2.继承（隔）
			继承数据
			1）定义：重用现有类的功能，并在此基础上扩展
			2）作用：一种代码复用的方式
			从设计角度讲
			1）定义：将相关类共性进行抽象，统一概念，隔离变化
		3.多态（做）
			1）定义：父类的同一种行为或者动作，在不同的子类上有不同的实现
			2）作用：在继承的基础上，体现类型的个性化（一个行为有不同的实现），增加程序的扩展性，体现开闭原则
	面向对象的六大原则：
		1.开闭原则：对扩展开放，对修改关闭，增加新功能，不改变原有代码，体现了同个行为有不同的实现（多态）
		2.依赖倒置：使用者在调用其方法时，依赖抽象，就是依赖于父类，这样将会更加稳定，以一不变应万变
		3.里氏替换：子类在重写父类的同时，最好也是依赖抽象，在原有父类方法上进行扩展
		4.单一职责：一个类做多且有一个可以改变它，为了降低类与类之间的耦合度
		5.组合复用原则：类与类之间的调用，且乎选择直接继承，应该在一个类里传其对象类型的参数以实现对另一类里方法的使用
		6.迪米特法则：类与类之间的交互，尽量少传数据量，以此类来降低类之间的耦合度
